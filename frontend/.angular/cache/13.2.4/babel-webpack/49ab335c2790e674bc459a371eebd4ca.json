{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { Sauce } from '../models/Sauce.model';\nimport { catchError, EMPTY, switchMap, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/sauces.service\";\nimport * as i4 from \"../services/auth.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/progress-spinner\";\nimport * as i7 from \"@angular/material/button\";\n\nfunction SauceFormComponent_mat_spinner_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\");\n  }\n}\n\nfunction SauceFormComponent_form_1_img_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 21);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"src\", ctx_r3.imagePreview, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction SauceFormComponent_form_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 2)(1, \"div\", 3)(2, \"label\", 4);\n    i0.ɵɵtext(3, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 6);\n    i0.ɵɵtext(7, \"Manufacturer\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 8);\n    i0.ɵɵtext(11, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"textarea\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 3)(14, \"input\", 10, 11);\n    i0.ɵɵlistener(\"change\", function SauceFormComponent_form_1_Template_input_change_14_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onFileAdded($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function SauceFormComponent_form_1_Template_button_click_16_listener() {\n      i0.ɵɵrestoreView(_r5);\n\n      const _r2 = i0.ɵɵreference(15);\n\n      return _r2.click();\n    });\n    i0.ɵɵtext(17, \"ADD IMAGE\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(18, SauceFormComponent_form_1_img_18_Template, 1, 1, \"img\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 3)(20, \"label\", 14);\n    i0.ɵɵtext(21, \"Main Pepper Ingredient\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(22, \"input\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"div\", 3)(24, \"label\", 16);\n    i0.ɵɵtext(25, \"Heat\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"div\", 17);\n    i0.ɵɵelement(27, \"input\", 18)(28, \"input\", 19);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(29, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function SauceFormComponent_form_1_Template_button_click_29_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.onSubmit();\n    });\n    i0.ɵɵtext(30, \"SUBMIT\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.sauceForm);\n    i0.ɵɵadvance(18);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.imagePreview);\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.sauceForm.invalid);\n  }\n}\n\nexport let SauceFormComponent = /*#__PURE__*/(() => {\n  class SauceFormComponent {\n    constructor(formBuilder, route, router, sauces, auth) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.sauces = sauces;\n      this.auth = auth;\n    }\n\n    ngOnInit() {\n      this.loading = true;\n      this.route.params.pipe(switchMap(params => {\n        if (!params['id']) {\n          this.mode = 'new';\n          this.initEmptyForm();\n          this.loading = false;\n          return EMPTY;\n        } else {\n          this.mode = 'edit';\n          return this.sauces.getSauceById(params['id']);\n        }\n      }), tap(sauce => {\n        if (sauce) {\n          this.sauce = sauce;\n          this.initModifyForm(sauce);\n          this.loading = false;\n        }\n      }), catchError(error => this.errorMsg = JSON.stringify(error))).subscribe();\n    }\n\n    initEmptyForm() {\n      this.sauceForm = this.formBuilder.group({\n        name: [null, Validators.required],\n        manufacturer: [null, Validators.required],\n        description: [null, Validators.required],\n        image: [null, Validators.required],\n        mainPepper: [null, Validators.required],\n        heat: [1, Validators.required],\n        heatValue: [{\n          value: 1,\n          disabled: true\n        }]\n      });\n      this.sauceForm.get('heat').valueChanges.subscribe(value => {\n        this.sauceForm.get('heatValue').setValue(value);\n      });\n    }\n\n    initModifyForm(sauce) {\n      this.sauceForm = this.formBuilder.group({\n        name: [sauce.name, Validators.required],\n        manufacturer: [sauce.manufacturer, Validators.required],\n        description: [sauce.description, Validators.required],\n        image: [sauce.imageUrl, Validators.required],\n        mainPepper: [sauce.mainPepper, Validators.required],\n        heat: [sauce.heat, Validators.required],\n        heatValue: [{\n          value: sauce.heat,\n          disabled: true\n        }]\n      });\n      this.sauceForm.get('heat').valueChanges.subscribe(value => {\n        this.sauceForm.get('heatValue').setValue(value);\n      });\n      this.imagePreview = this.sauce.imageUrl;\n    }\n\n    onSubmit() {\n      this.loading = true;\n      const newSauce = new Sauce();\n      newSauce.name = this.sauceForm.get('name').value;\n      newSauce.manufacturer = this.sauceForm.get('manufacturer').value;\n      newSauce.description = this.sauceForm.get('description').value;\n      newSauce.mainPepper = this.sauceForm.get('mainPepper').value;\n      newSauce.heat = this.sauceForm.get('heat').value;\n      newSauce.userId = this.auth.getUserId();\n\n      if (this.mode === 'new') {\n        this.sauces.createSauce(newSauce, this.sauceForm.get('image').value).pipe(tap(({\n          message\n        }) => {\n          console.log(message);\n          this.loading = false;\n          this.router.navigate(['/sauces']);\n        }), catchError(error => {\n          console.error(error);\n          this.loading = false;\n          this.errorMsg = error.message;\n          return EMPTY;\n        })).subscribe();\n      } else if (this.mode === 'edit') {\n        this.sauces.modifySauce(this.sauce._id, newSauce, this.sauceForm.get('image').value).pipe(tap(({\n          message\n        }) => {\n          console.log(message);\n          this.loading = false;\n          this.router.navigate(['/sauces']);\n        }), catchError(error => {\n          console.error(error);\n          this.loading = false;\n          this.errorMsg = error.message;\n          return EMPTY;\n        })).subscribe();\n      }\n    }\n\n    onFileAdded(event) {\n      const file = event.target.files[0];\n      this.sauceForm.get('image').setValue(file);\n      this.sauceForm.updateValueAndValidity();\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        this.imagePreview = reader.result;\n      };\n\n      reader.readAsDataURL(file);\n    }\n\n  }\n\n  SauceFormComponent.ɵfac = function SauceFormComponent_Factory(t) {\n    return new (t || SauceFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.SaucesService), i0.ɵɵdirectiveInject(i4.AuthService));\n  };\n\n  SauceFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SauceFormComponent,\n    selectors: [[\"app-sauce-form\"]],\n    decls: 2,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [3, \"formGroup\", 4, \"ngIf\"], [3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\"], [\"for\", \"manufacturer\"], [\"type\", \"text\", \"id\", \"manufacturer\", \"formControlName\", \"manufacturer\", 1, \"form-control\"], [\"for\", \"description\"], [\"id\", \"description\", \"rows\", \"5\", \"formControlName\", \"description\", 1, \"form-control\"], [\"type\", \"file\", \"accept\", \"image/*\", 3, \"change\"], [\"imageInput\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"style\", \"max-height: 100px;display:block;margin-top:10px\", 3, \"src\", 4, \"ngIf\"], [\"for\", \"main-pepper\"], [\"type\", \"text\", \"id\", \"main-pepper\", \"formControlName\", \"mainPepper\", 1, \"form-control\"], [\"for\", \"heat\"], [1, \"heat-container\"], [\"type\", \"range\", \"min\", \"1\", \"max\", \"10\", \"id\", \"heat\", \"formControlName\", \"heat\", 1, \"custom-range\", \"heat-range\"], [\"type\", \"number\", \"formControlName\", \"heatValue\", 1, \"form-control\", \"heat-reading\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"disabled\", \"click\"], [2, \"max-height\", \"100px\", \"display\", \"block\", \"margin-top\", \"10px\", 3, \"src\"]],\n    template: function SauceFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, SauceFormComponent_mat_spinner_0_Template, 1, 0, \"mat-spinner\", 0);\n        i0.ɵɵtemplate(1, SauceFormComponent_form_1_Template, 31, 3, \"form\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n      }\n    },\n    directives: [i5.NgIf, i6.MatSpinner, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i7.MatButton, i1.RangeValueAccessor, i1.NumberValueAccessor],\n    styles: [\"form[_ngcontent-%COMP%]{margin:2em auto;max-width:750px}.heat-range[_ngcontent-%COMP%]{width:60%;display:block}.heat-container[_ngcontent-%COMP%]{display:flex}.heat-reading[_ngcontent-%COMP%]{width:5em;margin-left:1.5em;background-color:#fff}input[type=file][_ngcontent-%COMP%]{display:none}\"]\n  });\n  return SauceFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}