{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { catchError, EMPTY, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/progress-spinner\";\nimport * as i6 from \"@angular/material/button\";\n\nfunction LoginComponent_mat_spinner_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\");\n  }\n}\n\nfunction LoginComponent_form_1_p_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.errorMsg);\n  }\n}\n\nfunction LoginComponent_form_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 2)(1, \"div\", 3)(2, \"label\", 4);\n    i0.ɵɵtext(3, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 6);\n    i0.ɵɵtext(7, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function LoginComponent_form_1_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.onLogin();\n    });\n    i0.ɵɵtext(10, \"LOGIN\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(11, LoginComponent_form_1_p_11_Template, 2, 1, \"p\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.loginForm);\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.loginForm.invalid);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.errorMsg);\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(formBuilder, auth, router) {\n      this.formBuilder = formBuilder;\n      this.auth = auth;\n      this.router = router;\n    }\n\n    ngOnInit() {\n      this.loginForm = this.formBuilder.group({\n        email: [null, [Validators.required, Validators.email]],\n        password: [null, Validators.required]\n      });\n    }\n\n    onLogin() {\n      this.loading = true;\n      const email = this.loginForm.get('email').value;\n      const password = this.loginForm.get('password').value;\n      this.auth.loginUser(email, password).pipe(tap(() => {\n        this.loading = false;\n        this.router.navigate(['/sauces']);\n      }), catchError(error => {\n        this.loading = false;\n        this.errorMsg = error.message;\n        return EMPTY;\n      })).subscribe();\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 2,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [3, \"formGroup\", 4, \"ngIf\"], [3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"disabled\", \"click\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"text-danger\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, LoginComponent_mat_spinner_0_Template, 1, 0, \"mat-spinner\", 0);\n        i0.ɵɵtemplate(1, LoginComponent_form_1_Template, 12, 3, \"form\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n      }\n    },\n    directives: [i4.NgIf, i5.MatSpinner, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i6.MatButton],\n    styles: [\"form[_ngcontent-%COMP%]{margin:2em auto;max-width:750px}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}