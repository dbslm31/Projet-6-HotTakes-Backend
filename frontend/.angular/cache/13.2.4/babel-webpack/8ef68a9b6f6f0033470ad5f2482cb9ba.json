{"ast":null,"code":"import { BehaviorSubject, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      this.isAuth$ = new BehaviorSubject(false);\n      this.authToken = '';\n      this.userId = '';\n    }\n\n    createUser(email, password) {\n      return this.http.post('http://localhost:3000/api/auth/signup', {\n        email: email,\n        password: password\n      });\n    }\n\n    getToken() {\n      return this.authToken;\n    }\n\n    getUserId() {\n      return this.userId;\n    }\n\n    loginUser(email, password) {\n      return this.http.post('http://localhost:3000/api/auth/login', {\n        email: email,\n        password: password\n      }).pipe(tap(({\n        userId,\n        token\n      }) => {\n        this.userId = userId;\n        this.authToken = token;\n        this.isAuth$.next(true);\n      }));\n    }\n\n    logout() {\n      this.authToken = '';\n      this.userId = '';\n      this.isAuth$.next(false);\n      this.router.navigate(['login']);\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}