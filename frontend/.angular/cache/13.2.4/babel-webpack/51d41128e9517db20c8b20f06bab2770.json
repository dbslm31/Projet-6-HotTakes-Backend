{"ast":null,"code":"import { catchError, mapTo, of, Subject, tap, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nexport let SaucesService = /*#__PURE__*/(() => {\n  class SaucesService {\n    constructor(http, auth) {\n      this.http = http;\n      this.auth = auth;\n      this.sauces$ = new Subject();\n    }\n\n    getSauces() {\n      this.http.get('http://localhost:3000/api/sauces').pipe(tap(sauces => this.sauces$.next(sauces)), catchError(error => {\n        console.error(error.error.message);\n        return of([]);\n      })).subscribe();\n    }\n\n    getSauceById(id) {\n      return this.http.get('http://localhost:3000/api/sauces/' + id).pipe(catchError(error => throwError(error.error.message)));\n    }\n\n    likeSauce(id, like) {\n      return this.http.post('http://localhost:3000/api/sauces/' + id + '/like', {\n        userId: this.auth.getUserId(),\n        like: like ? 1 : 0\n      }).pipe(mapTo(like), catchError(error => throwError(error.error.message)));\n    }\n\n    dislikeSauce(id, dislike) {\n      return this.http.post('http://localhost:3000/api/sauces/' + id + '/like', {\n        userId: this.auth.getUserId(),\n        like: dislike ? -1 : 0\n      }).pipe(mapTo(dislike), catchError(error => throwError(error.error.message)));\n    }\n\n    createSauce(sauce, image) {\n      const formData = new FormData();\n      formData.append('sauce', JSON.stringify(sauce));\n      formData.append('image', image);\n      return this.http.post('http://localhost:3000/api/sauces', formData).pipe(catchError(error => throwError(error.error.message)));\n    }\n\n    modifySauce(id, sauce, image) {\n      if (typeof image === 'string') {\n        return this.http.put('http://localhost:3000/api/sauces/' + id, sauce).pipe(catchError(error => throwError(error.error.message)));\n      } else {\n        const formData = new FormData();\n        formData.append('sauce', JSON.stringify(sauce));\n        formData.append('image', image);\n        return this.http.put('http://localhost:3000/api/sauces/' + id, formData).pipe(catchError(error => throwError(error.error.message)));\n      }\n    }\n\n    deleteSauce(id) {\n      return this.http.delete('http://localhost:3000/api/sauces/' + id).pipe(catchError(error => throwError(error.error.message)));\n    }\n\n  }\n\n  SaucesService.ɵfac = function SaucesService_Factory(t) {\n    return new (t || SaucesService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n  };\n\n  SaucesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SaucesService,\n    factory: SaucesService.ɵfac,\n    providedIn: 'root'\n  });\n  return SaucesService;\n})();","map":null,"metadata":{},"sourceType":"module"}